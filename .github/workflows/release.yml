name: Create Release on Merge to Master

on  :
    push:
        branches:
            - master

jobs:
    build     :
        if     : "!contains(github.event.head_commit.message, 'chore: update changelog')"
        name   : Build The Project
        runs-on: ubuntu-latest

        steps  :
            -   name: Checkout repository
                uses: actions/checkout@v4

            -   name: Set up NodeJS
                uses: actions/setup-node@v4
                with:
                    node-version: 22
                    cache       : 'yarn'

            -   name: Install dependencies
                run : yarn install --frozen-lockfile

            -   name: Run build
                run : yarn build

            -   name : Create ZIP archive
                run  : |
                    cd dist
                    zip -r ../frontend-build.zip .
                shell: bash

            -   name: Upload build artifact
                uses: actions/upload-artifact@v4
                with:
                    name: frontend-build
                    path: frontend-build.zip

    versioning:
        name   : Determine Version
        runs-on: ubuntu-latest
        outputs:
            new_version: ${{ steps.tag.outputs.new_tag }}
        needs  : build

        steps  :
            -   name: Checkout repository
                uses: actions/checkout@v4
                with:
                    fetch-depth: 0

            -   name: Generate New Tag
                id  : tag
                uses: anothrNick/github-tag-action@1.71.0
                env :
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                    DEFAULT_BUMP: patch

    changelog :
        name       : Generate Changelog
        runs-on    : ubuntu-latest
        needs      : versioning
        permissions:
            contents: write

        steps      :
            -   name: Checkout repository
                uses: actions/checkout@v4
                with:
                    fetch-depth: 0

            -   name: Install git-chglog
                run : |
                    curl -sSL https://github.com/git-chglog/git-chglog/releases/download/v0.15.0/git-chglog_0.15.0_linux_amd64.tar.gz | tar -xz
                    sudo mv git-chglog /usr/local/bin/

            -   name: Generate Changelog
                run : git-chglog -o CHANGELOG.md


            -   name: Push The Changelog for Tag
                env :
                    GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                run : |
                    CONTENT=$(base64 -w 0 CHANGELOG.md)  # Encode the file to base64
                    COMMIT_MESSAGE="chore: update changelog for new release"
                    LATEST_SHA=$(gh api repos/:owner/:repo/git/ref/heads/master --jq '.object.sha')
                    TREE_SHA=$(gh api repos/:owner/:repo/git/commits/$LATEST_SHA --jq '.tree.sha')
                    NEW_TREE_SHA=$(gh api repos/:owner/:repo/git/trees -f base_tree=$TREE_SHA -f tree[0][path]=CHANGELOG.md -f tree[0][mode]=100644 -f tree[0][type]=blob -f tree[0][content]="$CONTENT" --jq '.sha')
                    NEW_COMMIT_SHA=$(gh api repos/:owner/:repo/git/commits -f message="$COMMIT_MESSAGE" -f tree=$NEW_TREE_SHA -f parents[0]=$LATEST_SHA --jq '.sha')
                    gh api repos/:owner/:repo/git/refs/heads/master -X PATCH -f sha=$NEW_COMMIT_SHA

            -   name: Upload Changelog
                uses: actions/upload-artifact@v4
                with:
                    name: changelog
                    path: CHANGELOG.md

    publish   :
        name   : Publish Release
        runs-on: ubuntu-latest
        needs  : [ versioning, changelog ]

        steps  :
            -   name: Checkout repository
                uses: actions/checkout@v4

            -   name: Download build artifact
                uses: actions/download-artifact@v4
                with:
                    name: frontend-build

            -   name: Publish GitHub Release
                uses: softprops/action-gh-release@v2
                with:
                    tag_name   : "${{ needs.versioning.outputs.new_version }}"
                    name       : Release ${{ env.VERSION }}
                    body_path  : CHANGELOG.md
                    files      : frontend-build.zip
                    make_latest: true
                env :
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
